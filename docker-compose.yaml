version: '3.8'

services:
  postgres:
    container_name: my-postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: p@ssw0rd
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my-network

  zookeeper:
    container_name: my-zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - my-network

  kafka:
    container_name: my-kafka
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - my-network

  producers:
    container_name: my-producers
    build:
      context: ./producers-data
      dockerfile: Dockerfile
    ports:
      - "7071:7071"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
    depends_on:
      - kafka
    networks:
      - my-network

  consumers:
    container_name: my-consumers
    build:
      context: ./consumers-data
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://my-postgres:5432/test
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: p@ssw0rd
      KAFKA_BOOTSTRAP_SERVERS: my-kafka:9093
    depends_on:
      - postgres
      - kafka
    networks:
      - my-network

networks:
  my-network:
    driver: bridge